def find_missing_domino(some_domino_set):
    # Assuming pieces is a list of tuples representing domino pieces
    all_possible_pieces = [(i, j) for i in range(7) for j in range(i, 7)]

    # Create a set of known pieces
    known_pieces = set(some_domino_set)

    # Find the missing piece
    missing_piece = list(set(all_possible_pieces) - known_pieces)

    if len(missing_piece) == 1:
        return missing_piece[0]
    else:
        return None


def format_domino_piece(some_missing_piece):
    return f"({some_missing_piece[0]}, {some_missing_piece[1]}) - ({number_animal_mapper[some_missing_piece[0]]}," \
           f" {number_animal_mapper[some_missing_piece[1]]})"


number_animal_mapper = {
    0: "woodpecker",
    1: "ladybug",
    2: "horse",
    3: "rooster",
    4: "pig",
    5: "dog",
    6: "rabbit"
}

# Usage
input_domino_set = input("Enter your domino set as a list of tuples: ")
my_domino_set = eval(input_domino_set)
missing_piece = find_missing_domino(my_domino_set)

if missing_piece is not None:
    formatted_missing_piece = format_domino_piece(missing_piece)
    print(f"The missing domino piece is: {formatted_missing_piece}")
else:
    print("No missing domino piece found.")

# Example input: [(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6),
#                 (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (2, 2),
#                 (2, 3), (2, 4), (2, 6), (3, 3), (3, 4), (3, 5), (3, 6),
#                 (4, 4), (4, 5), (4, 6), (5, 5), (5, 6), (6, 6)]

